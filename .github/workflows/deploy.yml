name: Build and Deploy on main

on:
  push:
    branches:
      - main

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          REPOSITORY: ${{ secrets.REPOSITORY }}
          AWS_ACCOUNT_ID: 267932851334
          AWS_REGION: ap-south-1
        run: |
          docker build -t 267932851334.dkr.ecr.ap-south-1.amazonaws.com/${REPOSITORY}:latest .
          docker push 267932851334.dkr.ecr.ap-south-1.amazonaws.com/${REPOSITORY}:latest

  deploy-to-EC2:
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write SSH private key to file
        run: |
          echo "${{ secrets.SSH_KEY }}" > easyway.pem
          chmod 600 easyway.pem

      - name: Upload deploy script to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: easyway.pem
          source: "./deploy-easyway.sh"
          target: "~/deploy/"

      - name: Run deploy script on EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: easyway.pem
          script: |
            chmod +x ~/deploy/deploy-easyway.sh
            ~/deploy/deploy-easyway.sh -u ${{ secrets.USERNAME }} -h ${{ secrets.HOST }} -k ~/easyway.pem

      - name: Cleanup SSH key
        run: rm easyway.pem
