stages:
  - build
  - deploy

build-docker-image:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_DEFAULT_REGION
    - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 267932851334.dkr.ecr.ap-south-1.amazonaws.com
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "modify"
      when: on_success
  script:
    - docker build -t 267932851334.dkr.ecr.ap-south-1.amazonaws.com/$REPOSITORY:latest .
    - docker push 267932851334.dkr.ecr.ap-south-1.amazonaws.com/$REPOSITORY:latest

deploy-to-EC2:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "main"
      when: on_success
  needs: ['build-docker-image']
  script:
    |
    pwd
    cat > tandkfoodmart.pem << EOL
    $SSH_KEY
    EOL
    ls -ltr
    chmod 400 tandkfoodmart.pem
    chmod +x deploy-tandk.sh
    ls -ltr
    ./deploy-tandk.sh -u $USERNAME -h $HOST -k ./tandkfoodmart.pem
    rm tandkfoodmart.pem
